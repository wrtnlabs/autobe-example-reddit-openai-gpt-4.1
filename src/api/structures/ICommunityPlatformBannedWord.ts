import { tags } from "typia";

/**
 * Banned word entity definition for moderation, content vetting, policy
 * enforcement. Mirrors Prisma schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformBannedWord = {
  /** Unique identifier for banned word entry */
  id: string & tags.Format<"uuid">;

  /** Banned word or phrase. Must be unique. */
  phrase: string;

  /** Optional moderation category (profanity, spam, hate). For admin use. */
  category?: string | null;

  /**
   * Whether the word/phrase is currently enforced for moderation
   * (true=active)
   */
  enabled: boolean;

  /** Creation timestamp */
  created_at: string & tags.Format<"date-time">;

  /** Update timestamp */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformBannedWord {
  /**
   * Request DTO for paginated/filter/search query for banned word moderation
   * dictionary.
   */
  export type IRequest = {
    /** Search term to filter by phrase */
    search?: string;

    /** Filter by moderation category */
    category?: string;

    /** Filter for enabled/disabled rows */
    enabled?: boolean;

    /** Page number */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Results per page (default 20) */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Sort field */
    orderBy?: "created_at" | "phrase" | "category";

    /** Sort direction */
    direction?: "asc" | "desc";
  };

  /** Request: create a banned word for moderation dictionary. */
  export type ICreate = {
    /** Unique banned word or phrase (cannot duplicate existing entries) */
    phrase: string;

    /** Moderation category (e.g., 'profanity', 'spam'). Optional. */
    category?: string | null;

    /** Whether enforcement should be active immediately (true/false) */
    enabled: boolean;
  };

  /**
   * Summary for paginated list of banned words. Used in IPage* ISummary
   * lists.
   */
  export type ISummary = {
    /** Unique identifier */
    id: string & tags.Format<"uuid">;

    /** Banned phrase */
    phrase: string;

    /** Currently enforced for moderation */
    enabled: boolean;

    /** When this entry was created */
    created_at: string & tags.Format<"date-time">;

    /** When this was last updated */
    updated_at: string & tags.Format<"date-time">;
  };

  /**
   * Request object for updating a banned word or phrase entry for moderation.
   * Any field may be omitted if not changing that property. Only
   * phrase/category/enabled are editable.
   */
  export type IUpdate = {
    /**
     * The forbidden word or phrase. Supports Unicode (case-insensitive, up
     * to internal limit). Required to be unique for all banned entries. Use
     * for changing the target phrase to be filtered in moderation or
     * content checks.
     */
    phrase?: string;

    /**
     * Optional category/label for the word (e.g.,
     * 'profanity','spam','hate'). Used to segment moderation tagging and
     * reporting. Null to remove any category.
     */
    category?: string | null;

    /**
     * Whether the banned word is active for enforcement. If false, the
     * word/phrase is ignored by content moderation. Toggle to (de)activate
     * filtering temporarily.
     */
    enabled?: boolean;
  };
}
