import { tags } from "typia";

/**
 * Comprehensive representation of a single recent community navigation entry
 * for a member user.
 *
 * Reflects a row in community_platform_recent_communities table, mapping a
 * user's last navigation to a particular community. Includes the navigation's
 * unique id, IDs for both the member user and the community, rank/order
 * (recent_rank: max 5 per user, smaller = more recent), and the timestamp for
 * last navigation (last_activity_at).
 *
 * Used to power sidebars, home context personalization, and historical/back
 * navigation. Business logic ensures only one entry per (memberuser,
 * community), 5 max per user, ordered by recent_rank.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformRecentCommunity = {
  /**
   * Unique UUID for the recent community navigation entry (row id). Used for
   * updates and deletion. Primary key from the schema.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the member user who owns this recent navigation record. Maps to
   * memberuser_id in the schema. Used for access control: only the owner can
   * access/update/delete.
   */
  memberuser_id: string & tags.Format<"uuid">;

  /**
   * UUID of the community visited (recently navigated to). Maps to
   * community_id in the schema. Powers feed/context behaviors.
   */
  community_id: string & tags.Format<"uuid">;

  /**
   * Order/rank of this entry for the user (1 is most recent, max 5 per user,
   * re-ordered after insertions/deletions).
   */
  recent_rank: number & tags.Type<"int32">;

  /**
   * ISO8601 UTC timestamp when this community was last navigated to by the
   * user. Directly drives context menus and home personalization.
   */
  last_activity_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformRecentCommunity {
  /**
   * Request DTO for retrieving or searching recent community navigation
   * history for the authenticated member user. Used to support feed
   * personalization, sidebar navigation, and context menus.
   *
   * Supports pagination (page, limit), and optionally filter or sort
   * parameters for future UX expansion. Only the authenticated user can
   * access or modify their own recent community navigation list. Maps
   * directly to retrieval flows on the community_platform_recent_communities
   * table.
   */
  export type IRequest = {
    /**
     * Optional 1-based page number for pagination, as per standard API
     * conventions.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum records to return per page (default or forced 5). */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Optional sort field (e.g., 'recent_rank', 'last_activity_at'). May be
     * ignored in platform business logic for now.
     */
    sort?: string | undefined;

    /**
     * Optional filter string for searching within recent communities
     * (future extensibility; may be ignored).
     */
    filter?: string | undefined;
  };

  /**
   * Parameters required for creating a recent community navigation record for
   * a member user.
   *
   * Maps directly to recent community addition, linking the authenticated
   * user and the selected community. Only the community_id is provided by the
   * client; all other fields (user, recency rank, timestamps) are determined
   * by the backend. Used by UI to add communities to the recent list upon
   * user activity without exposing ownership fields in requests.
   */
  export type ICreate = {
    /**
     * The unique identifier (UUID) of the community to be marked as
     * recently visited by the current member user. This value must
     * reference an existing community_platform_communities.id. Set by the
     * client. Member user ID is inferred from authentication context, never
     * supplied directly in the request. Recency ordering and last activity
     * timestamps are managed by the server.
     */
    community_id: string & tags.Format<"uuid">;
  };

  /**
   * Payload for updating a recent community navigation record. Only mutable
   * fields—recency rank and last activity time—may be set. Ownership and
   * basic linking fields cannot be edited. Typically used by system logic or
   * analytics flows to maintain navigation order and context.
   */
  export type IUpdate = {
    /**
     * Recency order for this community navigation entry, lower numbers are
     * more recently visited (1-5). Optional, as system manages rank in most
     * flows.
     */
    recent_rank?: (number & tags.Type<"int32">) | undefined;

    /**
     * Timestamp (ISO 8601, e.g., 2025-09-09T18:10:41.767Z) of the last
     * interaction the user had with the community. If omitted, defaults to
     * current time. Usually managed by the system, but modifiable for
     * analytic or corrective scenarios.
     */
    last_activity_at?: (string & tags.Format<"date-time">) | undefined;
  };
}
