import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents an unauthenticated guest user session, as tracked by the platform.
 * Used for analytics, system business logic, and session-based feature flows.
 * There is no PII in this modelâ€”only non-identifying keys and standard audit
 * fields. Mapped directly to the Prisma guest users model; only system actors
 * (admin, analytics pipeline) interact with this entity.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformGuestUser = {
  /**
   * Unique identifier for the guest user session (UUID). Used for
   * identification in analytics tables and system traceability. Not linked to
   * any PII. Read-only.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Timestamp when this guest session was first recorded (ISO 8601). Required
   * by business logic for analytics tracing and performance.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for the last activity on this guest session. Used for session
   * expiration, re-linking, or analytics reviews.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp indicating when the guest session was (soft) deleted for
   * analytics removal or GDPR compliance. Nullable; present only for deleted
   * records.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Opaque analytics or traceability signature. Used to reconcile guest
   * sessions or trace unique device/browser identity for business
   * logic/analytics. Never PII, may be null.
   */
  session_signature?: string | null | undefined;
};
export namespace ICommunityPlatformGuestUser {
  /**
   * Body schema for guest session registration. No personal data collected;
   * only an optional opaque session_signature can be provided for anonymous
   * relinking. This request enables analytics and session tracking for guest
   * flows.
   */
  export type IJoin = {
    /**
     * Optional opaque string for linking guest records to session tracking
     * or analytics. Not a user identifier or PII. Used for metrics
     * continuity across guest browsing sessions, if provided; may be null.
     */
    session_signature?: string | null | undefined;
  };

  /**
   * Response DTO for successful guest registration or token refresh. Contains
   * assigned guest UUID and JWT token for temporary authorized guest
   * session.
   */
  export type IAuthorized = {
    /**
     * Assigned guest user UUID. Anonymous, non-personal identity value for
     * tracking a single browser or device in platform analytics. Matches id
     * in the guestusers table.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Timestamp when this guest session was first recorded (ISO 8601).
     * Required by business logic for analytics tracing and performance.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp for the last activity on this guest session. Used for
     * session expiration, re-linking, or analytics reviews.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp indicating when the guest session was (soft) deleted for
     * analytics removal or GDPR compliance. Nullable; present only for
     * deleted records.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Opaque analytics or traceability signature. Used to reconcile guest
     * sessions or trace unique device/browser identity for business
     * logic/analytics. Never PII, may be null.
     */
    session_signature?: string | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Payload for requesting a guest token refresh. Only the existing, valid
   * token must be supplied to obtain a new temporary session token.
   */
  export type IRefresh = {
    /**
     * Current guest token (JWT string) to be refreshed. Must be a valid,
     * non-revoked, and non-expired token issued for a guest user (not
     * member/admin).
     */
    token: string;
  };

  /**
   * Request body for searching, filtering, and paginating guest user sessions
   * (for analytics or audit). Used by admin dashboard or analytics pipelines.
   * All fields are optional filters/pagination cues corresponding to the
   * Prisma guest user model.
   */
  export type IRequest = {
    /**
     * Opaque session signature for analytic correlation, traceability, or
     * guest re-linking. Used in business logic for non-identifying
     * analytics .
     */
    session_signature?: string | null | undefined;

    /** Pagination: page number for guest user search/listing analytics. */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Pagination: maximum number of records to return in guest user
     * analytics search.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort key for guest user listing queries (created_at, updated_at,
     * etc.).
     */
    sort?: string | undefined;

    /** Sort direction ('asc' or 'desc') for sorting guest user sessions. */
    order?: "asc" | "desc" | undefined;

    /**
     * Start of created_at date range for filtering guest users (ISO 8601).
     * Optional filter.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * End of created_at date range for filtering guest users (ISO 8601).
     * Optional filter.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Start of updated_at date range for searching guest sessions (ISO
     * 8601).
     */
    updated_from?: (string & tags.Format<"date-time">) | undefined;

    /** End of updated_at date range for searching guest sessions (ISO 8601). */
    updated_to?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Concise summary of a guest user session, as used for analytics,
   * monitoring, and session recovery/re-link flows.
   *
   * Maps directly to key columns in `community_platform_guestusers`. Designed
   * to be safe for analytics dashboards, audit trails, and anonymized guest
   * flows. Does not expose any sensitive user information or PII; only
   * session-identifying metadata.
   */
  export type ISummary = {
    /**
     * Opaque unique id for the guest user session, as assigned on creation.
     *
     * References the `community_platform_guestusers.id` column in the
     * schema, not linked to any user-identifying information.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Timestamp when the guest session was first established.
     *
     * Used in analytics and for tracking session lifespan (corresponds to
     * `created_at` field).
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of last update (access/heartbeat) for this guest user
     * session.
     *
     * Provides recency context for session tracking (maps to `updated_at`
     * column).
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Opaque signature string optionally used for session recovery,
     * deduplication, or analytics.
     *
     * Sourced from `session_signature` (nullable) in the schema; set when a
     * browser/device is re-identified or for analytic linkage.
     */
    session_signature?: string | null | undefined;
  };
}
