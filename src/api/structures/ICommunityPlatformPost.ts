import { tags } from "typia";

/**
 * Represents the main data structure for a post (thread, topic, etc.) in the
 * community platform. All core fields are present including author (member or
 * admin), immutable community reference, title, body, and audit timestamps.
 * Soft deletion controlled by deleted_at field. When author is a member or
 * admin, the appropriate ID is set; if both are null, post is invalid
 * (invariant enforced by business logic). Display name is optional and resolves
 * to 'Anonymous' if empty. Used in detail pages, post edit/update flows, and
 * search/list results. Never exposes sensitive fields or internal-only audit
 * information.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformPost = {
  /** Primary key of the post (UUID). Assigned by the database. */
  id: string & tags.Format<"uuid">;

  /**
   * The UUID of the community containing this post. References
   * community_platform_communities.id. Immutable for each post.
   */
  community_platform_community_id: string & tags.Format<"uuid">;

  /**
   * ID of the member user who wrote the post, if authored by a regular user.
   * Only one of author_memberuser_id or author_adminuser_id will be set for
   * any post.
   */
  author_memberuser_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * ID of the admin user who wrote the post, if applicable. Only one of
   * author_memberuser_id or author_adminuser_id is set per post.
   */
  author_adminuser_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Title of the post. Required on creation. Must be 5-120 characters, plain
   * text. Used in main feed, search, and detail views.
   */
  title: string & tags.MinLength<5> & tags.MaxLength<120>;

  /**
   * Content body of the post. Plain text with line breaks. Required, must be
   * 10-10,000 characters. Executable scripts/code not allowed.
   */
  body: string & tags.MinLength<10> & tags.MaxLength<10000>;

  /**
   * Optional display name for the author, up to 32 characters. If omitted or
   * empty, 'Anonymous' is displayed according to platform rules.
   */
  author_display_name?: (string & tags.MaxLength<32>) | undefined;

  /**
   * ISO 8601 timestamp for when the post was created. Managed by backend
   * only.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * ISO 8601 timestamp for last update to post. Always set on creation,
   * modified on edits.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for soft deletion if applicable. Null or omitted means active.
   * If set, post is not shown in feeds/search results.
   */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace ICommunityPlatformPost {
  /**
   * Search and filter criteria for retrieving a paginated list of posts based
   * on a combination of community, author, keyword, and sort order. Used
   * throughout UI for main feed, search, and exploration flows. All fields
   * are optional; omitting a field removes that filter. Pagination is handled
   * by page/limit.
   */
  export type IRequest = {
    /**
     * Optional filter: List of community UUIDs. Only posts from these
     * communities are returned when specified. Empty or omitted means no
     * filter.
     */
    community_ids?: (string & tags.Format<"uuid">)[] | undefined;

    /**
     * Optional filter: List of author user UUIDs (member or admin). Limits
     * search to those authors. Omitted or empty = any author.
     */
    author_user_ids?: (string & tags.Format<"uuid">)[] | undefined;

    /**
     * Optional search term for matching post titles or bodies. Must be at
     * least 2 characters if present. Used for feed search.
     */
    keyword?: string | undefined;

    /**
     * Sorting mode for results. 'newest' = most recent first, 'top' =
     * highest score (upvotes - downvotes). Default is 'newest'.
     */
    sort_order?: "newest" | "top" | undefined;

    /**
     * The page number of results to fetch. Default behavior is 1 if
     * omitted. Used for feed pagination.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of posts to return per page. Standard is 20 by
     * business logic. Should not exceed 100.
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Payload for creating a new post in the platform. Fields include community
   * reference (required), post title and body (with length limits enforced),
   * and optionally an author display name. Author, created, and audit fields
   * are filled in by the server based on authentication context and platform
   * business rules; never supplied by client directly. Must not include any
   * unauthorized system or audit fields (e.g., post id, author user ids,
   * timestamps). Security: author fields always excluded from create
   * requests.
   */
  export type ICreate = {
    /**
     * The UUID of the target community in which to create this post. Must
     * reference an existing community_platform_communities.id. Required.
     * Chosen by the user via UI selectors.
     */
    community_platform_community_id: string & tags.Format<"uuid">;

    /**
     * Title for the new post. Must be 5-120 characters, plain text only.
     * Required. Enforced by length constraint.
     */
    title: string & tags.MinLength<5> & tags.MaxLength<120>;

    /**
     * Main text content of the post. Required. Between 10 and 10,000
     * characters. Only plain text allowed. Line breaks permitted; no
     * scripts or code.
     */
    body: string & tags.MinLength<10> & tags.MaxLength<10000>;

    /**
     * Optional display name for the post author. Up to 32 characters. If
     * omitted or empty, platform displays 'Anonymous' as the author.
     */
    author_display_name?: (string & tags.MaxLength<32>) | undefined;
  };

  /**
   * Update fields for a post. Allows modification of title (5–120 chars),
   * body (10–10,000 chars), and display name (0–32 chars, optional, fallback
   * 'Anonymous'). Fields are individually optional for PATCH semantics. All
   * changes tracked by updated_at timestamp.
   */
  export type IUpdate = {
    /**
     * Title of the post. The title must be plain text between 5 and 120
     * characters. Scripts or code are forbidden. This field is updatable on
     * edit operations but required only for creation. Referenced in
     * business constraints for validation and UI rendering.
     */
    title?: (string & tags.MinLength<5> & tags.MaxLength<120>) | undefined;

    /**
     * Body content of the post. Must be plain text (no scripts/code),
     * allows line breaks. Business validation enforces length between 10
     * and 10,000 characters. Can be updated by owners/admins. This field is
     * essential for post detail display and full-text search.
     */
    body?: (string & tags.MinLength<10> & tags.MaxLength<10000>) | undefined;

    /**
     * Optional display name to show for the post's author. If empty, the
     * platform displays 'Anonymous' to other users as fallback. Maximum of
     * 32 characters. Owned and editable by the post author only; always
     * sanitized for platform consistency.
     */
    author_display_name?: (string & tags.MaxLength<32>) | undefined;
  };

  /**
   * Summary representation of a post entity, suitable for use in paginated
   * feeds, card lists, and search results. Exposes only safe,
   * display-appropriate properties—never raw body or internal metadata.
   *
   * Derived from community_platform_posts. Contains all fields necessary for
   * headline display, author context, and navigation.
   */
  export type ISummary = {
    /**
     * Unique primary key for the post. Maps to community_platform_posts.id
     * field. Used throughout the platform for direct post retrieval, list
     * display, and as a parent for comments.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Identifier of the parent sub-community this post belongs to. Maps to
     * community_platform_posts.community_platform_community_id.
     */
    community_platform_community_id: string & tags.Format<"uuid">;

    /**
     * Post title. 5–120 characters. Subject to business validation and used
     * as the main headline in cards and feeds. From
     * community_platform_posts.title.
     */
    title: string;

    /**
     * Optional author display name (0–32 chars). If not set, UI should
     * display 'Anonymous.' Used for privacy and display consistency, never
     * for authentication or access control. Maps to
     * community_platform_posts.author_display_name.
     */
    author_display_name?: string | null | undefined;

    /**
     * Timestamp for post creation (ISO8601). From
     * community_platform_posts.created_at. Essential for sorting and
     * display.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp for latest post modification (ISO8601). From
     * community_platform_posts.updated_at. Tracked for change history and
     * audit display.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
