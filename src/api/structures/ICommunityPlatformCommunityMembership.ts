import { tags } from "typia";

/**
 * Represents a single membership record relating a member to a community
 * (community_platform_community_memberships table). Used by detailed APIs and
 * single-record queries.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommunityMembership = {
  /** Primary key of the membership record. */
  id: string & tags.Format<"uuid">;

  /**
   * ID for the member in the membership (references
   * community_platform_members.id).
   */
  member_id: string & tags.Format<"uuid">;

  /**
   * ID for the community in the membership (references
   * community_platform_communities.id).
   */
  community_id: string & tags.Format<"uuid">;

  /** UTC timestamp for when this member joined the community. */
  joined_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformCommunityMembership {
  /**
   * Advanced query, filter, and pagination structure for searching community
   * members (paginated roster-style read). Used in PATCH/POST APIs for member
   * listing.
   */
  export type IRequest = {
    /** Current page number (1-based). May be null for default. */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /** Page size limit (default 20). Nullable if not specified. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /**
     * Field and direction to sort returned members by (e.g., "joined_at
     * desc").
     */
    sort?: string;

    /**
     * Optional free-text search keywords (applies to member display name or
     * email as determined by business logic).
     */
    search?: string;

    /** Filter for memberships joined after this datetime. */
    joined_after?: (string & tags.Format<"date-time">) | null;

    /** Filter for memberships joined before this datetime. */
    joined_before?: (string & tags.Format<"date-time">) | null;

    /**
     * Filter by (partial) member display name for advanced UI or moderation
     * search.
     */
    member_display_name?: string;
  };

  /**
   * Summary view of a community membership entity with key fields: id,
   * member_id, community_id, joined_at. For use in paginated list views or
   * summary cards.
   */
  export type ISummary = {
    /**
     * Unique identifier (UUID) of the membership record in the
     * community_platform_community_memberships table.
     */
    id: string & tags.Format<"uuid">;

    /** UUID of the member joined to this record. */
    member_id: string & tags.Format<"uuid">;

    /** UUID of the community the member joined. */
    community_id: string & tags.Format<"uuid">;

    /** Timestamp UTC when membership was established. */
    joined_at: string & tags.Format<"date-time">;
  };

  /**
   * No client-writable properties. Membership creation uses the currently
   * authenticated member and communityId context from the route, not from the
   * request body. All required fields are filled by backend from business
   * context.
   */
  export type ICreate = {};
}
