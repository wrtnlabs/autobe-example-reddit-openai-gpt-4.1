import { tags } from "typia";

/**
 * Represents a single search action log for the community platform. Each entry
 * may be linked to a member or admin user, contains search query strings,
 * scope, and device info for analytics and compliance. Mirrors the Prisma model
 * community_platform_search_logs.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformSearchLog = {
  /**
   * Unique identifier for this search log event. Corresponds to the primary
   * key in the community_platform_search_logs table. Always a generated UUID
   * as per business logic.
   *
   * @see Prisma: community_platform_search_logs.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * ID of the member user who performed the search, or null if none.
   * References community_platform_memberusers.id.
   */
  member_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * ID of the admin user who performed the search, or null if not applicable.
   * References community_platform_adminusers.id.
   */
  admin_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * The text input used for the search query. Used for analytics, business
   * improvements, and compliance. Required field.
   */
  search_query: string;

  /**
   * The logical scope of the search (such as 'posts', 'comments',
   * 'communities'). Used for analytic reporting and behavioral breakdowns.
   * @see Prisma: community_platform_search_logs.target_scope
   */
  target_scope: string;

  /**
   * The IP address from which this search event was performed. Captured for
   * audit and geo-distribution analytics. @see Prisma:
   * community_platform_search_logs.ip_address
   */
  ip_address: string;

  /** HTTP user-agent string for analytics/device tracking. */
  user_agent?: string | null | undefined;

  /**
   * Timestamp when this search event was created (RFC 3339, ISO 8601 format).
   * Immutable audit field. @see Prisma:
   * community_platform_search_logs.created_at
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Soft-delete timestamp or null if active. Included for compliance with
   * data retention/deletion policies.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformSearchLog {
  /**
   * SearchLog analytics request object for fetching/filtering logs from
   * community_platform_search_logs. Allows full-featured search for
   * admins/audits, supporting compliance review and analytic queries by
   * scope, user, time, and substring match.
   */
  export type IRequest = {
    /**
     * Optional partial (substring) match search query (minimum 2 characters
     * required for non-trivial search). Used for analytics monitoring,
     * admin investigations, and auditing platform search patterns.
     */
    search_query?: (string & tags.MinLength<2>) | undefined;

    /**
     * Specifies which business entity scope to restrict the search logs
     * toâ€”posts, comments, or communities. Used for compliance or admin
     * analytics.
     */
    target_scope?: "posts" | "comments" | "communities" | undefined;

    /**
     * Filter for search logs performed by a particular member user. Used
     * for compliance, audit, and analytics uses.
     */
    member_user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter for search logs performed by an admin user. Used for
     * compliance and audit flows.
     */
    admin_user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optional ISO 8601 start datetime to restrict logs to those created
     * after the specified point. Used for date range filtering in
     * auditing.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional ISO 8601 end datetime to restrict logs to those created
     * before the specified point. For closed date range analytics.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Which page of results should be returned. Optional; default is the
     * first page.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum records to return in paginated response. Optional; system
     * defaults apply if omitted.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Sort direction for log creation time. Valid values are
     * 'created_at_desc' for newest first or 'created_at_asc' for oldest
     * first.
     */
    sort?: "created_at_desc" | "created_at_asc" | undefined;
  };
}
