import { tags } from "typia";

/**
 * Community category entity reference for classifying sub-communities. Mirrors
 * Prisma model community_platform_categories. Contains unique code, name,
 * description, and audit fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCategory = {
  /**
   * The unique identifier for the community category. UUID generated by the
   * system.
   */
  id: string & tags.Format<"uuid">;

  /**
   * A unique code or slug identifying the category, typically slug-form
   * (e.g., 'tech_programming'). Used for lookup and API filtering. Must be
   * unique system-wide.
   */
  code: string;

  /**
   * Human-friendly display name for the category (e.g., 'Tech &
   * Programming'). Must be unique and required for UI lists and selection.
   */
  name: string;

  /**
   * Optional long-form description of the category (max 200 chars). Provides
   * UI helpers or admin documentation. May be null.
   */
  description?: string | null;

  /**
   * Timestamp for when the category was created (ISO 8601). Set by the
   * database.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for most recent category update (ISO 8601). Set on create and
   * each write.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformCategory {
  /** Request filter object for searching and paginating categories. */
  export type IRequest = {
    /** Search term to filter by name or code. */
    search?: string;

    /** Exact code filter (optional). */
    code?: string;

    /** Exact name filter (optional). */
    name?: string;

    /** Page number for pagination. */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Records per page (default 20, max 100). */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Field to order by. */
    orderBy?: "created_at" | "name" | "code";

    /** Sort direction. */
    direction?: "asc" | "desc";
  };

  /**
   * Request: create a new community category. Maps to
   * community_platform_categories Prisma model.
   */
  export type ICreate = {
    /** Slug or code for category. Unique and required (e.g., 'movies_tv'). */
    code: string;

    /** Display label for UI selection. Required and unique. */
    name: string;

    /** Optional category description for UI or admin use. */
    description?: string | null;
  };

  /**
   * Request: update mutable fields for a category. Only 'name' or
   * 'description' may be updated.
   */
  export type IUpdate = {
    /** New display name for the category. */
    name?: string;

    /** Updated category description. May be null to clear. */
    description?: string | null;
  };

  /**
   * Summary object for category list/pagination APIs. Used in paginated
   * response. Subset of the full category entity.
   */
  export type ISummary = {
    /** Unique category identifier (UUID). */
    id: string & tags.Format<"uuid">;

    /** System-unique slug/code for lookup and filtering */
    code: string;

    /** Display name */
    name: string;

    /** Creation timestamp */
    created_at: string & tags.Format<"date-time">;

    /** Update timestamp */
    updated_at: string & tags.Format<"date-time">;
  };
}
