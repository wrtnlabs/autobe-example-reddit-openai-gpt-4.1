import { tags } from "typia";

/**
 * A single rule/guideline entry for a community. Specifies behavioral or
 * participation rules for members. Up to 10 rules per community. Each rule_line
 * is a short, single-line string.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommunityRule = {
  /** Unique identifier (primary key) for the rule record. */
  id: string & tags.Format<"uuid">;

  /** ID of the parent community this rule belongs to. */
  community_id: string & tags.Format<"uuid">;

  /**
   * Ordering of this rule in the list (0-9 for up to 10 rules per community).
   * Must be unique per community.
   */
  rule_index: number & tags.Type<"int32"> & tags.Minimum<0> & tags.Maximum<9>;

  /** Text content of the rule (single line, max 50 characters, no breaks). */
  rule_line: string & tags.MaxLength<50>;
};
export namespace ICommunityPlatformCommunityRule {
  /**
   * Filtering, sorting, and pagination options for listing/searching rules
   * within a community. Designed for use with rule management UI and admin
   * tools.
   */
  export type IRequest = {
    /** Page number (1-based) for pagination. */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Maximum number of results per page. */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Sorting field for the rule list. */
    sort?: "rule_index" | "created_at";

    /** Optional filter for a specific rule index. */
    rule_index?: number &
      tags.Type<"int32"> &
      tags.Minimum<0> &
      tags.Maximum<9>;

    /** Optional substring filter for searching rule_line contents. */
    query?: string & tags.MaxLength<50>;
  };

  /**
   * Input payload for creating a new rule on a community. Both rule_index
   * (position/order) and rule_line (content) are required.
   */
  export type ICreate = {
    /**
     * The index (position) for the rule, in the range 0-9 (max 10 rules per
     * community). Required.
     */
    rule_index: number & tags.Type<"int32"> & tags.Minimum<0> & tags.Maximum<9>;

    /**
     * Text of the new rule (max 50 characters, one line, no breaks).
     * Required.
     */
    rule_line: string & tags.MaxLength<50>;
  };

  /**
   * Fields for updating (editing or reordering) a community rule. All fields
   * optional; only changed ones need be present.
   */
  export type IUpdate = {
    /** (Optional) New index (position) for the rule if reordering. */
    rule_index?: number &
      tags.Type<"int32"> &
      tags.Minimum<0> &
      tags.Maximum<9>;

    /** (Optional) Updated text (max 50 chars). */
    rule_line?: string & tags.MaxLength<50>;
  };
}
