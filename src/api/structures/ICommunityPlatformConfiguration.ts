import { tags } from "typia";

/**
 * Describes a configuration parameter for the community platform. Each
 * configuration is a key/value pair controlling system behavior. Includes
 * display, validation, and timestamp fields. Key must be unique. Tracks
 * creation and update for audit purposes.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformConfiguration = {
  /** Primary key as UUID for the configuration record. */
  id: string & tags.Format<"uuid">;

  /**
   * Unique configuration parameter's key (e.g., 'max_post_length'). Required
   * and indexed.
   */
  key: string;

  /** Arbitrary configuration value. Can be JSON, string, or number as string. */
  value: string;

  /**
   * Human/machine description of this configuration parameter. Optional, max
   * 200 characters.
   */
  description?: string | null | undefined;

  /** Timestamp when the configuration entry was created (ISO 8601, UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last value or description update (ISO 8601, UTC). */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformConfiguration {
  /**
   * Query and paging criteria for searching platform configurations. Used for
   * admin search panelâ€”filters on key, description, value, and sortable
   * fields.
   */
  export type IRequest = {
    /** The requested page number for pagination. Optional; default is 1. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Number of records to return per page. Optional; defaults to system
     * standard.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Field by which to sort results. Must be one of 'created_at',
     * 'updated_at', 'key', or 'value'.
     */
    sort_by?: "created_at" | "updated_at" | "key" | "value" | null | undefined;

    /** Sorting order direction, either 'asc' or 'desc'. */
    sort_direction?: "asc" | "desc" | null | undefined;

    /** Substring or trigram search string to match within the key. */
    key_query?: string | null | undefined;

    /** Substring search for description field. */
    description_query?: string | null | undefined;

    /** Substring search for configuration values. */
    value_query?: string | null | undefined;

    /**
     * Starting date for filtering configurations (inclusive). Format:
     * YYYY-MM-DD.
     */
    date_from?: (string & tags.Format<"date">) | null | undefined;

    /**
     * Ending date for filtering configurations (inclusive). Format:
     * YYYY-MM-DD.
     */
    date_to?: (string & tags.Format<"date">) | null | undefined;
  };

  /**
   * Input for creation of a new configuration parameter. Must provide key
   * (unique) and value (string/JSON/number as string). Description is
   * optional.
   */
  export type ICreate = {
    /** Key for the configuration parameter. Required, unique. */
    key: string;

    /**
     * Parameter value, as required by application business logic. May be
     * arbitrarily structured (JSON, string, number as string, etc).
     */
    value: string;

    /** Optional human-readable description, max 200 chars. */
    description?: string | null | undefined;
  };

  /**
   * Update payload for configuration parameter; only value and description
   * may be edited. Key and ID are immutable for updates.
   */
  export type IUpdate = {
    /** Updated configuration value, format determined by config logic. */
    value?: string | undefined;

    /** Optional updated description, up to 200 chars. */
    description?: string | null | undefined;
  };

  /**
   * Summary view of system/platform configuration. Used for fast UI listing,
   * editing, and search. Mirrors core business fields from
   * community_platform_configurations.
   */
  export type ISummary = {
    /**
     * Unique identifier for the configuration parameter. Primary key of
     * community_platform_configurations.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique key name for this configuration parameter (e.g.,
     * 'max_post_length', 'enable_voting', etc.).
     */
    key: string;

    /**
     * Value as interpreted by application (can be JSON, string, or number
     * as string).
     */
    value: string;

    /**
     * Optional description (max 200 chars) for what this config controls,
     * for admin/logging context.
     */
    description?: string | null | undefined;

    /**
     * Timestamp when configuration entry was created (RFC 3339/ISO 8601,
     * immutable/audit).
     */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp of last update to value/description (RFC 3339/ISO 8601). */
    updated_at: string & tags.Format<"date-time">;
  };
}
