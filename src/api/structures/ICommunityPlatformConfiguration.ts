import { tags } from "typia";

/**
 * System-wide configuration parameter as defined in platform configuration
 * table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformConfiguration = {
  /** Unique identifier for system configuration entry. */
  id: string & tags.Format<"uuid">;

  /**
   * Configuration key (unique). Used for lookups, references, and
   * programmatic retrieval throughout business logic.
   */
  key: string;

  /**
   * Raw configuration value (string-encoded). Supports values that are
   * numbers, JSON, booleans, or codes, but always stored/read as string.
   */
  value: string;

  /**
   * Optional human-readable description to clarify/explain configuration for
   * admins/auditors.
   */
  description?: string | null;

  /** Timestamp when the configuration parameter was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to this configuration entry. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * If set, marks this configuration as soft-deleted (inactive); otherwise
   * null (active).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace ICommunityPlatformConfiguration {
  /** Request shape for performing a filtered/paginated configuration search. */
  export type IRequest = {
    /** Fulltext or partial search query for key/description/values. */
    q?: string;

    /** Limits results to configuration with the exact given key. */
    key?: string;

    /** If true, include soft-deleted configurations in search results. */
    includeDeleted?: boolean;

    /** Pagination: page number (1-based). */
    page?: number;

    /** Pagination: number of results per page. */
    limit?: number;
  };

  /** Request object for creating a new system configuration parameter. */
  export type ICreate = {
    /**
     * Configuration key (must be unique). Used for programmatic access and
     * reference in the system.
     */
    key: string;

    /**
     * Raw value for configuration entry (string-encoded). Interpreted at
     * business logic layer.
     */
    value: string;

    /**
     * Optional long-form description for admins, explaining what this
     * configuration controls.
     */
    description?: string | null;
  };

  /**
   * Request object for updating one or more fields of an existing
   * configuration parameter.
   */
  export type IUpdate = {
    /** Updates configuration's key (must remain unique if changed). */
    key?: string;

    /**
     * New value to assign (string-encoded, business logic interprets
     * format).
     */
    value?: string;

    /** New configuration description, if annotated/clarified. */
    description?: string | null;
  };
}
