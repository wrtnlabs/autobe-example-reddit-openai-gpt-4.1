import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patch__communityPlatform_communities } from "../../../providers/patch__communityPlatform_communities";
import { get__communityPlatform_communities_$communityId } from "../../../providers/get__communityPlatform_communities_$communityId";

import { IPageICommunityPlatformCommunity } from "../../../api/structures/IPageICommunityPlatformCommunity";
import { ICommunityPlatformCommunity } from "../../../api/structures/ICommunityPlatformCommunity";

@Controller("/communityPlatform/communities")
export class CommunityplatformCommunitiesController {
  /**
   * Paginated search and discovery for communities with filtering and sort
   * options.
   *
   * Search and return a paginated list of communities with advanced filtering
   * and sorting. Includes options to filter by category, owner, partial name
   * match, or display title. Results provide summary information for each
   * community along with basic category data and status. Pagination and sort by
   * activity or creation time are supported. Does not return communities
   * flagged as deleted (unless admin override for auditing). Available to all
   * users for discovery, but response includes additional admin details when
   * accessed by administrators. This endpoint is optimized for search/explore
   * and top-level listings.
   *
   * @param connection
   * @param body Search and filter options for community listings. Includes
   *   pagination, sorting, search string, and category/owner filters.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @TypedBody()
    body: ICommunityPlatformCommunity.IRequest,
  ): Promise<IPageICommunityPlatformCommunity.ISummary> {
    try {
      return await patch__communityPlatform_communities({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve complete community information and relationships by community ID.
   *
   * Get details about a specific community, including all fields, rule lines,
   * category and owner metadata, and related status. All fields defined in the
   * community_platform_communities schema are included, with linked
   * rules/categorization and display information. Public API for community
   * browsing and view pages. Does not return data for soft-deleted communities
   * to prevent invalid or misleading content being shown; admins may have an
   * override to read deleted state for audits. No private or sensitive data
   * returned to member or public roles.
   *
   * @param connection
   * @param communityId The community record ID to look up.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":communityId")
  public async at(
    @TypedParam("communityId")
    communityId: string & tags.Format<"uuid">,
  ): Promise<ICommunityPlatformCommunity> {
    try {
      return await get__communityPlatform_communities_$communityId({
        communityId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
