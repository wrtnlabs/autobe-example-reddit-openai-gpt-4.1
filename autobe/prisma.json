{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"community_platform_categories","description":"Defines allowable sub-community categories across the platform. Each category is referenced by community creation, enforcing business constraints and search classification. Name is case-insensitive unique and immutable after creation. Serves as a lookup for category selectors throughout the platform.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Unique name of the category. Used for business logic and search classification. Must be case-insensitive unique, 5-32 characters, alphanumeric, hyphens and underscores allowed.","nullable":false},{"name":"display_order","type":"int","description":"Order for display in lists and UI selectors. Sequential integer starting from 1.","nullable":false},{"name":"description","type":"string","description":"Optional description of the category for tooltips or context. Maximum 200 characters.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when category was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when category record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["display_order"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"community_platform_configurations","description":"Stores global system configuration parameters, feature toggles, and environment-level settings for the whole platform. Keys must be unique and are referenced by application server logic. Auditability of changes is critical (tracked via updated_at).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"key","type":"string","description":"Unique key name for the configuration parameter (e.g., 'max_post_length', 'enable_voting', etc.).","nullable":false},{"name":"value","type":"string","description":"Parameter value as interpreted by application (arbitrary, can be JSON, string, or number as string).","nullable":false},{"name":"description","type":"string","description":"Description of what this configuration controls and its effect. Max 200 chars for admin and logging context.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when configuration entry was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to value or description.","nullable":false}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[],"ginIndexes":[{"fieldName":"description"}]},{"name":"community_platform_audit_logs","description":"Platform-wide audit log covering sensitive actions, admin operations, configuration changes, login events, and other system-critical activities. Used for compliance review and security tracking. Logs reference affected user or admin by id (nullable for system events).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_memberuser_id","type":"uuid","description":"Optional reference to {@link community_platform_memberusers.id} who initiated the event, if applicable.","relation":{"name":"actorMemberUser","targetModel":"community_platform_memberusers"},"unique":false,"nullable":true},{"name":"actor_adminuser_id","type":"uuid","description":"Optional reference to {@link community_platform_adminusers.id} who initiated the event, if applicable.","relation":{"name":"actorAdminUser","targetModel":"community_platform_adminusers"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Type of audit event (e.g., 'config_change', 'session_login', 'community_delete').","nullable":false},{"name":"event_detail","type":"string","description":"Detailed text or JSON describing the event context and any data changed (suitable for security review, up to 1000 chars).","nullable":false},{"name":"ip_address","type":"string","description":"Originating IP address (for security tracing, IPv4 or IPv6, may be empty/null for automated/system events).","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of log event creation. Audit trails require immutable time records.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["event_type"]}],"ginIndexes":[{"fieldName":"event_detail"}]},{"name":"community_platform_sessions","description":"Stores all platform-issued JWT or OAuth session tokens and associated metadata for all users. Each session tracks issue and expiry, IP/device info, and status. Data is used for login management, concurrent device enforcement, and forced logout tracing.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"ID of the user (references any member/admin/guest as appropriate, must be found in user tables). Flexible to support all user types.","relation":{"name":"user","targetModel":"community_platform_memberusers"},"unique":false,"nullable":false}],"plainFields":[{"name":"token","type":"string","description":"Issued secure session token (not stored in plaintext). Used as reference for session retrieval/invalidation. Unique per session.","nullable":false},{"name":"issued_at","type":"datetime","description":"Session issuance timestamp.","nullable":false},{"name":"expires_at","type":"datetime","description":"Session expiry timestamp.","nullable":false},{"name":"device_info","type":"string","description":"Information about the user's device/browser at login (user agent or structured JSON string for security analysis).","nullable":true},{"name":"ip_address","type":"string","description":"Login IP address at session creation (for audit/security logic).","nullable":true},{"name":"revoked_at","type":"datetime","description":"If non-null, session was manually revoked before expiry.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of session DB record creation.","nullable":false}],"uniqueIndexes":[{"fieldNames":["token"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id"]},{"fieldNames":["issued_at"]}],"ginIndexes":[]},{"name":"community_platform_external_integrations","description":"Administrative registry of authorized third-party API integrations for the platform, including OAuth providers, webhooks, or external systems allowed to access or receive events from the platform. Used for configuration, monitoring, and management of all integrations.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"integration_name","type":"string","description":"Unique name for this integration (e.g., 'GoogleOAuth', 'SendGrid', 'Webhook-Analytics').","nullable":false},{"name":"provider_url","type":"uri","description":"Base URL for the third-party integration endpoint.","nullable":true},{"name":"status","type":"string","description":"Operational status of integration: enabled, disabled, error, pending setup.","nullable":false},{"name":"config_json","type":"string","description":"JSON configuration payload for the integration (credentials, required scopes, etc.). Sensitive, restrict access to admins.","nullable":false},{"name":"last_successful_sync_at","type":"datetime","description":"Timestamp of last confirmed event or handshake from this integration (for monitoring health/status).","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this integration entry was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to integration details/configuration.","nullable":false}],"uniqueIndexes":[{"fieldNames":["integration_name"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"community_platform_guestusers","description":"Defines unauthenticated guest user sessions tracked by the platform for analytics and traceability. Records represent unique browser/device interaction without user login. No personal identifying information is stored. Used for session tracking and conversion analytics. Does not allow credential linkage. Only referenced by system-side features and events.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when this guest session was first recorded.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this guest session was last active.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion. Null if active.","nullable":true},{"name":"session_signature","type":"string","description":"Opaque string used to link guest records to tracking or legitimate metrics. Not a user identifier.","nullable":true}],"uniqueIndexes":[{"fieldNames":["session_signature"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]},{"name":"community_platform_memberusers","description":"Represents registered and authenticated platform users. Business entity for content creation, voting, commenting, joining/leaving communities, and owning posts or comments. Each member user is associated with credentials (email/password login). May have display name, status, and is auditable by created/updated timestamps. Linked to posts/comments by foreign key in other business tables.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_credential_id","type":"uuid","description":"Reference to authenticated credentials {@link community_platform_user_credentials.id}. Required for login and password resets.","relation":{"name":"credential","targetModel":"community_platform_user_credentials"},"unique":true,"nullable":false}],"plainFields":[{"name":"display_name","type":"string","description":"Display name visible to others; 0–32 characters allowed. Optional, falls back to 'Anonymous'.","nullable":true},{"name":"status","type":"string","description":"Account status for business logic (e.g., active, suspended, pending_deletion).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this user account was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this user account was last modified.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion, or null if the account is active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_credential_id"],"unique":true}],"plainIndexes":[{"fieldNames":["display_name"]},{"fieldNames":["status"]}],"ginIndexes":[]},{"name":"community_platform_adminusers","description":"Platform administrators with elevated privileges. Can perform system moderation tasks, manage communities, delete any content, and change site-wide configuration. Admin users are managed independently and require their own credentials. May represent trusted staff or automated service accounts. Status and audit timestamps apply. Must be created and managed by other admins. Not convertible from member users.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_credential_id","type":"uuid","description":"Reference to credentials for login/authentication {@link community_platform_user_credentials.id}.","relation":{"name":"credential","targetModel":"community_platform_user_credentials"},"unique":true,"nullable":false}],"plainFields":[{"name":"display_name","type":"string","description":"Admin display name. Optional field for UI display only.","nullable":true},{"name":"status","type":"string","description":"Admin status (e.g., active, suspended, retired).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this admin account was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of most recent admin info update.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft delete; null if the admin is active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_credential_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"community_platform_user_credentials","description":"Authentication credential entity for both member and admin users. Stores securely hashed password, unique email address, and management audit fields. Audited for login activity and password reset security. Linked via user_credential_id in member and admin users for 1:1 relationship. Credentials are never exposed to non-privileged systems. Login enforcement and user password reset flows enforced via this table.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Unique email address for authentication. Case-insensitive match. Used for login and password reset flows.","nullable":false},{"name":"password_hash","type":"string","description":"Securely stored hash of user password (bcrypt or Argon2). Never the plain text, even to internal logic.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when credentials were created. Used for audit trail.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when credentials were last changed (e.g., password reset).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when credentials were deleted/invalidated. Null if still valid.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-communities.prisma","namespace":"Communities","models":[{"name":"community_platform_communities","description":"Table representing sub-communities within the platform. Each row stores metadata and configuration for a single community: unique name, category reference, description, visual assets (logo/banner), and rules (via subsidiary table). The owner is an immutable reference to the user who created the community. Only owners may update metadata except for deletion, which may be performed by admin. Business constraints enforce unique and valid names. Categories are referenced from community_platform_categories. Supports full-text search on name and description via GIN indexes. Deletion is soft (deleted_at).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"owner_id","type":"uuid","description":"Creator of the community. References {@link community_platform_memberusers.id}.","relation":{"name":"owner","targetModel":"community_platform_memberusers"},"unique":false,"nullable":false},{"name":"category_id","type":"uuid","description":"Category for this community. References {@link community_platform_categories.id}.","relation":{"name":"category","targetModel":"community_platform_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"Unique, case-insensitive name of the community (5-32 chars, a-zA-Z0-9-_). Immutable once set. Used as public identifier.","nullable":false},{"name":"description","type":"string","description":"Optional community description, up to 200 characters.","nullable":true},{"name":"logo_uri","type":"uri","description":"Optional URI for community logo/image asset.","nullable":true},{"name":"banner_uri","type":"uri","description":"Optional URI for community banner image asset.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp this community was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the most recent metadata update.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp marking soft deletion, or null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["owner_id","created_at"]},{"fieldNames":["category_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"community_platform_community_memberships","description":"Table representing the many-to-many relationship between users and communities. Each record marks the fact that a user is a joined member of a given community. Used for membership enforcement, home feed personalization, and recent communities logic. Entries may be created or removed by users directly. Uniqueness enforced on (user, community). Supports joined time and auditing.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Joined community reference. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"memberuser_id","type":"uuid","description":"User that joined this community. {@link community_platform_memberusers.id}.","relation":{"name":"memberUser","targetModel":"community_platform_memberusers"},"unique":false,"nullable":false}],"plainFields":[{"name":"joined_at","type":"datetime","description":"Timestamp when user joined this community.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_id","memberuser_id"],"unique":true}],"plainIndexes":[{"fieldNames":["memberuser_id","joined_at"]},{"fieldNames":["community_id"]}],"ginIndexes":[]},{"name":"community_platform_community_rules","description":"Stores the set of numbered rules for each community, used for informational and business constraint display. Each rule is a text string up to business limit; rules are always associated with a particular community. Managed only through community settings flows, not directly by end users. Deleting a community cascades deletion of its rules. Ordering is enforced per-community with rule_index.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Parent community for this rule. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"rule_index","type":"int","description":"Order of this rule in display (starts at 1, max 10 per community).","nullable":false},{"name":"rule_text","type":"string","description":"Content for the community rule (max 100 characters).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp rule was added.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_id","rule_index"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id"]}],"ginIndexes":[{"fieldName":"rule_text"}]},{"name":"community_platform_recent_communities","description":"Records the recent community navigation/activity for a member user, to power personalized sidebars and navigation. Each entry links a user and a community, with a recency ordering (recent_rank) and last_activity_at timestamp. Not a membership table—distinct from platform_community_memberships. Used for fast access/recall UI, managed automatically by system logic. Max 5 recent communities per user enforced via unique index.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"memberuser_id","type":"uuid","description":"User who recently navigated to a community. {@link community_platform_memberusers.id}.","relation":{"name":"memberUser","targetModel":"community_platform_memberusers"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Recently visited community. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"recent_rank","type":"int","description":"Rank/order of this community in recent navigation for this user (lower = more recent, max 5 per user).","nullable":false},{"name":"last_activity_at","type":"datetime","description":"Timestamp this community was last visited by user.","nullable":false}],"uniqueIndexes":[{"fieldNames":["memberuser_id","recent_rank"],"unique":true},{"fieldNames":["memberuser_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["memberuser_id"]}],"ginIndexes":[]}]},{"filename":"schema-04-posts.prisma","namespace":"Posts","models":[{"name":"community_platform_posts","description":"Posts table storing all primary content items (threads, questions, etc.). Contains title and body, references to community and author, and temporal fields for auditing. Supports soft delete for business rule compliance. Each post must reference a valid community and author (either member or admin). Used for feed queries, full-text search, and direct management by users. Related entities include {@link community_platform_communities} for the containing group and {@link community_platform_memberusers} or {@link community_platform_adminusers} for authorship.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Belonged community's {@link community_platform_communities.id}. Required for enforcing post ownership to a specific community.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"author_memberuser_id","type":"uuid","description":"Authored member user's {@link community_platform_memberusers.id}. Exactly one of author_memberuser_id or author_adminuser_id must be set. Used when the post author is a regular member user.","relation":{"name":"memberAuthor","targetModel":"community_platform_memberusers"},"unique":false,"nullable":true},{"name":"author_adminuser_id","type":"uuid","description":"Authored admin user's {@link community_platform_adminusers.id}. Exactly one of author_memberuser_id or author_adminuser_id must be set. Used when the post author is an admin user.","relation":{"name":"adminAuthor","targetModel":"community_platform_adminusers"},"unique":false,"nullable":true}],"plainFields":[{"name":"title","type":"string","description":"Post title. Must be between 5 and 120 characters as enforced by business rules.","nullable":false},{"name":"body","type":"string","description":"Post body content. Must be between 10 to 10,000 characters. Plain text with only line breaks allowed.","nullable":false},{"name":"author_display_name","type":"string","description":"Optional author display name (0–32 chars). Displays 'Anonymous' if empty as per system rule.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp of the post.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated timestamp of the post.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null if not deleted, otherwise indicates deletion time.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","title"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["community_platform_community_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"community_platform_post_votes","description":"Supporting table capturing voting state (upvote, downvote, none) for each user and post. Only one row exists per user+post combination. Used for aggregator queries on score calculation for posts and enforcing one-vote-per-user logic. Foreign keys reference {@link community_platform_posts}, {@link community_platform_memberusers}, and {@link community_platform_adminusers}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Related post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false},{"name":"voter_memberuser_id","type":"uuid","description":"Voting member user's {@link community_platform_memberusers.id}. One of voter_memberuser_id or voter_adminuser_id must be set.","relation":{"name":"memberVoter","targetModel":"community_platform_memberusers"},"unique":false,"nullable":true},{"name":"voter_adminuser_id","type":"uuid","description":"Voting admin user's {@link community_platform_adminusers.id}. One of voter_memberuser_id or voter_adminuser_id must be set.","relation":{"name":"adminVoter","targetModel":"community_platform_adminusers"},"unique":false,"nullable":true}],"plainFields":[{"name":"vote_state","type":"string","description":"Vote state for post by user: 'upvote', 'downvote', or 'none'. Only one allowed per post per user. Null indicates an explicit removal (optional for soft deleted votes).","nullable":false},{"name":"created_at","type":"datetime","description":"Vote creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Vote last updated timestamp (toggle logic).","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id","voter_memberuser_id"],"unique":true},{"fieldNames":["community_platform_post_id","voter_adminuser_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_post_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_post_moderation_logs","description":"Table recording moderation actions on posts (edit, delete, restore, etc.) for legal/accountability compliance. Each event is linked to a post, performed by an admin user, and stores the action type, reason, and timestamp. Used for audit trails and recovery/business rule enforcement. Related to {@link community_platform_posts} and {@link community_platform_adminusers}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false},{"name":"performed_adminuser_id","type":"uuid","description":"Admin user performing the moderation action {@link community_platform_adminusers.id}.","relation":{"name":"adminModerator","targetModel":"community_platform_adminusers"},"unique":false,"nullable":false}],"plainFields":[{"name":"action_type","type":"string","description":"Moderation action type (e.g., 'edit', 'delete', 'restore').","nullable":false},{"name":"action_reason","type":"string","description":"Explanation/reason provided for moderation action. Up to 255 chars.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of the moderation event.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id"]},{"fieldNames":["performed_adminuser_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"action_reason"}]}]},{"filename":"schema-05-comments.prisma","namespace":"Comments","models":[{"name":"community_platform_comments","description":"Represents a comment on a post in the community platform. Supports arbitrary nesting via self-reference for threaded replies (parent_comment_id). Each comment is authored by a user, and may reference either a member, guest, or admin user ID, and is always associated to a specific post. Comments can be top-level (no parent_comment_id) or replies (parent_comment_id set). Moderation and access controls are enforced at the application. All standard text and length validation is application-enforced. Deletion is soft (deleted_at).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"The post this comment belongs to. References {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false},{"name":"parent_comment_id","type":"uuid","description":"The parent comment for nested replies. References {@link community_platform_comments.id}. Null for top-level comments.","relation":{"name":"parentComment","targetModel":"community_platform_comments","mappingName":"recursive"},"unique":false,"nullable":true},{"name":"author_memberuser_id","type":"uuid","description":"The member user who authored this comment. References {@link community_platform_memberusers.id}. Null unless the comment was made by a member user.","relation":{"name":"authorMember","targetModel":"community_platform_memberusers"},"unique":false,"nullable":true},{"name":"author_guestuser_id","type":"uuid","description":"The guest user who authored this comment. References {@link community_platform_guestusers.id}. Null unless the comment was made by a guest user.","relation":{"name":"authorGuest","targetModel":"community_platform_guestusers"},"unique":false,"nullable":true},{"name":"author_adminuser_id","type":"uuid","description":"The admin user who authored this comment. References {@link community_platform_adminusers.id}. Null unless the comment was made by an admin user.","relation":{"name":"authorAdmin","targetModel":"community_platform_adminusers"},"unique":false,"nullable":true}],"plainFields":[{"name":"body","type":"string","description":"The body content of the comment, plain text, 2–2,000 characters. Validation is application-enforced.","nullable":false},{"name":"display_name","type":"string","description":"Optional author display name for this comment (0–32 characters). Uses \"Anonymous\" if empty per platform rules.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the comment was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the comment was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete: Timestamp when the comment was deleted, null if not deleted.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id","created_at"]},{"fieldNames":["parent_comment_id"]},{"fieldNames":["author_memberuser_id"]},{"fieldNames":["author_guestuser_id"]},{"fieldNames":["author_adminuser_id"]}],"ginIndexes":[{"fieldName":"body"}]},{"name":"community_platform_comment_votes","description":"Tracks per-user vote state for each comment. Each record represents the current vote (upvote, downvote, or none) by a single user (can be member, guest, or admin) on a given comment. Maximum of one vote state per (user, comment) pair is enforced. Cannot be used to vote on own comment, enforced by application. Used to calculate comment scores.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"comment_id","type":"uuid","description":"The comment this vote is associated with. References {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":false},{"name":"voter_memberuser_id","type":"uuid","description":"The member user who cast the vote. References {@link community_platform_memberusers.id}. Null unless vote by a member user.","relation":{"name":"voterMember","targetModel":"community_platform_memberusers"},"unique":false,"nullable":true},{"name":"voter_guestuser_id","type":"uuid","description":"The guest user who cast the vote. References {@link community_platform_guestusers.id}. Null unless vote by a guest user.","relation":{"name":"voterGuest","targetModel":"community_platform_guestusers"},"unique":false,"nullable":true},{"name":"voter_adminuser_id","type":"uuid","description":"The admin user who cast the vote. References {@link community_platform_adminusers.id}. Null unless vote by an admin user.","relation":{"name":"voterAdmin","targetModel":"community_platform_adminusers"},"unique":false,"nullable":true}],"plainFields":[{"name":"vote_type","type":"string","description":"Vote state: must be one of 'upvote', 'downvote', or 'none'. Business logic ensures at most one vote per user/comment.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the vote was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["comment_id","voter_memberuser_id"],"unique":true},{"fieldNames":["comment_id","voter_guestuser_id"],"unique":true},{"fieldNames":["comment_id","voter_adminuser_id"],"unique":true}],"plainIndexes":[{"fieldNames":["comment_id"]}],"ginIndexes":[]}]},{"filename":"schema-06-analytics.prisma","namespace":"Analytics","models":[{"name":"community_platform_search_logs","description":"Search action logs for the community platform. Records user and admin search actions including IP, search query, target scope, and timestamps for analytics, data export compliance, and trend analysis. Supports tracking search activity for personalizing experiences and fulfilling compliance audits like GDPR data searches. Links to member/admin user by foreign key (may be null—for some anonymous system-level logs), and to IP address for security monitoring.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_user_id","type":"uuid","description":"Performed member user's {@link community_platform_memberusers.id}. May be null for non-authenticated or system-driven logs.","relation":{"name":"memberUser","targetModel":"community_platform_memberusers"},"unique":false,"nullable":true},{"name":"admin_user_id","type":"uuid","description":"Performed admin user's {@link community_platform_adminusers.id}. Null unless the search was performed by an admin.","relation":{"name":"adminUser","targetModel":"community_platform_adminusers"},"unique":false,"nullable":true}],"plainFields":[{"name":"search_query","type":"string","description":"The text of the search query issued by the user or admin. Used for analytics and service improvement.","nullable":false},{"name":"target_scope","type":"string","description":"The logical scope of the search, such as 'posts', 'comments', or 'communities'. Used for analytic and UI behavioral breakdowns.","nullable":false},{"name":"ip_address","type":"string","description":"The user or system IP address from which the search was performed. Used for audit/security review and geo-distribution analytics.","nullable":false},{"name":"user_agent","type":"string","description":"HTTP user-agent string for device/browser analytics. Helps track session/device fingerprints and trends.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this search log entry was created.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp (nullable). Included for compliance with data retention/deletion policies.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["ip_address"]},{"fieldNames":["member_user_id"]}],"ginIndexes":[{"fieldName":"search_query"}]},{"name":"community_platform_data_export_logs","description":"Logs system/export data requests for compliance and admin audit. Tracks when a member or admin requests a downloadable data export (e.g., personal data, posts, or community details), including which user/admin made the request, what type of data was requested, export format, and time. Useful for legal compliance (GDPR/CCPA) and admin oversight of all access to large-scale data exports. Links to both member and admin users (nullable depending on actor), and includes plain fields for event context.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_user_id","type":"uuid","description":"Requesting member user's {@link community_platform_memberusers.id}. May be null if export was triggered by admin-only action or on behalf of a user by admin.","relation":{"name":"memberUser","targetModel":"community_platform_memberusers"},"unique":false,"nullable":true},{"name":"admin_user_id","type":"uuid","description":"Requesting admin user's {@link community_platform_adminusers.id}. May be null if request was performed by a member only.","relation":{"name":"adminUser","targetModel":"community_platform_adminusers"},"unique":false,"nullable":true}],"plainFields":[{"name":"export_type","type":"string","description":"The nature of the export (e.g., 'user_data', 'community_data', 'posts', etc.). Used for compliance tracking and analytics.","nullable":false},{"name":"export_format","type":"string","description":"File format of the export ('json', 'csv', etc.). Used in analytics/audit.","nullable":false},{"name":"requested_ip","type":"string","description":"IP address from which the export was requested. For audit trail, security, and compliance.","nullable":false},{"name":"status","type":"string","description":"Status of the export request (e.g., 'pending', 'completed', 'failed'). Used for operational monitoring.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the export request was made.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-delete timestamp (nullable). Included for GDPR/policy-driven removal or process clean-up.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["status"]}],"ginIndexes":[]}]}]}