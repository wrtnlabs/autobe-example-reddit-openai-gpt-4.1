/// Table representing sub-communities within the platform. Each row stores
/// metadata and configuration for a single community: unique name, category
/// reference, description, visual assets (logo/banner), and rules (via
/// subsidiary table). The owner is an immutable reference to the user who
/// created the community. Only owners may update metadata except for
/// deletion, which may be performed by admin. Business constraints enforce
/// unique and valid names. Categories are referenced from
/// community_platform_categories. Supports full-text search on name and
/// description via GIN indexes. Deletion is soft (deleted_at).
///
/// @namespace Communities
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_communities {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Creator of the community. References {@link
  /// community_platform_memberusers.id}.
  owner_id String
  
  /// Category for this community. References {@link
  /// community_platform_categories.id}.
  category_id String
  
  /// Unique, case-insensitive name of the community (5-32 chars, a-zA-Z0-9-_).
  /// Immutable once set. Used as public identifier.
  name String
  
  /// Optional community description, up to 200 characters.
  description String?
  
  /// Optional URI for community logo/image asset.
  logo_uri String?
  
  /// Optional URI for community banner image asset.
  banner_uri String?
  
  /// Timestamp this community was created.
  created_at DateTime
  
  /// Timestamp of the most recent metadata update.
  updated_at DateTime
  
  /// Timestamp marking soft deletion, or null if active.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  owner community_platform_memberusers @relation(fields: [owner_id], references: [id], onDelete: Cascade)
  category community_platform_categories @relation(fields: [category_id], references: [id], onDelete: Cascade)
  
  community_platform_community_memberships community_platform_community_memberships[]
  community_platform_community_rules community_platform_community_rules[]
  community_platform_recent_communities community_platform_recent_communities[]
  community_platform_posts community_platform_posts[]
  
  @@unique([name])
  @@index([owner_id, created_at])
  @@index([category_id])
  @@index([created_at])
}

/// Table representing the many-to-many relationship between users and
/// communities. Each record marks the fact that a user is a joined member of
/// a given community. Used for membership enforcement, home feed
/// personalization, and recent communities logic. Entries may be created or
/// removed by users directly. Uniqueness enforced on (user, community).
/// Supports joined time and auditing.
///
/// @namespace Communities
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_community_memberships {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Joined community reference. {@link community_platform_communities.id}.
  community_id String
  
  /// User that joined this community. {@link
  /// community_platform_memberusers.id}.
  memberuser_id String
  
  /// Timestamp when user joined this community.
  joined_at DateTime
  
  //----
  // RELATIONS
  //----
  community community_platform_communities @relation(fields: [community_id], references: [id], onDelete: Cascade)
  memberUser community_platform_memberusers @relation(fields: [memberuser_id], references: [id], onDelete: Cascade)
  
  @@unique([community_id, memberuser_id], map: "community_platform_community_memberships_community_id__843c6db7")
  @@index([memberuser_id, joined_at], map: "community_platform_community_memberships_memberuser_id_20f16d26")
  @@index([community_id])
}

/// Stores the set of numbered rules for each community, used for
/// informational and business constraint display. Each rule is a text string
/// up to business limit; rules are always associated with a particular
/// community. Managed only through community settings flows, not directly by
/// end users. Deleting a community cascades deletion of its rules. Ordering
/// is enforced per-community with rule_index.
///
/// @namespace Communities
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_community_rules {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Parent community for this rule. {@link community_platform_communities.id}.
  community_id String
  
  /// Order of this rule in display (starts at 1, max 10 per community).
  rule_index Int
  
  /// Content for the community rule (max 100 characters).
  rule_text String
  
  /// Timestamp rule was added.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  community community_platform_communities @relation(fields: [community_id], references: [id], onDelete: Cascade)
  
  @@unique([community_id, rule_index])
  @@index([community_id])
}

/// Records the recent community navigation/activity for a member user, to
/// power personalized sidebars and navigation. Each entry links a user and a
/// community, with a recency ordering (recent_rank) and last_activity_at
/// timestamp. Not a membership tableâ€”distinct from
/// platform_community_memberships. Used for fast access/recall UI, managed
/// automatically by system logic. Max 5 recent communities per user enforced
/// via unique index.
///
/// @namespace Communities
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_recent_communities {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// User who recently navigated to a community. {@link
  /// community_platform_memberusers.id}.
  memberuser_id String
  
  /// Recently visited community. {@link community_platform_communities.id}.
  community_id String
  
  /// Rank/order of this community in recent navigation for this user (lower =
  /// more recent, max 5 per user).
  recent_rank Int
  
  /// Timestamp this community was last visited by user.
  last_activity_at DateTime
  
  //----
  // RELATIONS
  //----
  memberUser community_platform_memberusers @relation(fields: [memberuser_id], references: [id], onDelete: Cascade)
  community community_platform_communities @relation(fields: [community_id], references: [id], onDelete: Cascade)
  
  @@index([community_id])
  
  @@unique([memberuser_id, recent_rank], map: "community_platform_recent_communities_memberuser_id_re_fd697867")
  @@unique([memberuser_id, community_id], map: "community_platform_recent_communities_memberuser_id_co_2c64c9d9")
  @@index([memberuser_id])
}